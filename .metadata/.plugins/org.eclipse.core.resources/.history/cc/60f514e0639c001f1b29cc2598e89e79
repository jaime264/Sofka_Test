package com.bank.cuenta.service.impl;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.bank.cuenta.model.Cuenta;
import com.bank.cuenta.model.Movimiento;
import com.bank.cuenta.repository.MovimientoRepository;
import com.bank.cuenta.service.MovimientoService;

@Service
public class MovimientoServiceImpl implements MovimientoService {

	@Autowired
    private MovimientoRepository movimientoRepository;

	@Override
	public List<Movimiento> getAll() {
		return movimientoRepository.findAll();
	}

	@Override
	public Movimiento getById(Integer id) {
		return movimientoRepository.findById(id).orElse(null);
	}

	@Override
	public Movimiento save(Movimiento movimiento) {
		// Obtener la cuenta asociada al movimiento
	    Cuenta cuenta = movimiento.getCuenta();
	    if (cuenta == null) {
	        throw new IllegalArgumentException("La cuenta asociada no puede ser nula.");
	    }

	    // Calcular el nuevo saldo después del movimiento
	    double nuevoSaldo = cuenta.getSaldoInicial() + movimiento.getValor();

	    // Validar que el saldo no sea negativo después de un retiro
	    if (nuevoSaldo < 0) {
	        throw new IllegalArgumentException("Saldo insuficiente para realizar el movimiento.");
	    }

	    // Establecer el saldo en el movimiento
	    movimiento.setSaldo(nuevoSaldo);

	    // Guardar el movimiento en la base de datos
	    return movimientoRepository.save(movimiento);
	}

	@Override
	public void delete(Integer id) {
		movimientoRepository.deleteById(id);
	}

    
    
}
